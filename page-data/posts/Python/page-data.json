{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/Python",
    "result": {"pageContext":{"currentCategory":"Python","categories":["All","Spring","Python","운영체제","네트워크","자료구조","Java","회고","PS"],"edges":[{"node":{"id":"5a4dee1d-16e6-5c3a-ab6c-8868ee79a5f5","excerpt":"GIL은 Global Interpreter Lock의 약자이다. Global이 붙으니 전역적이라는 의미이고, Lock을 사용하니 무언가를 제한한다는것은 알겠는데 Interpreter는 뭘까?\n인터프리터에 대해서 제한을 건다는 것이 어떤 의미일까? 아래에서 쭉 알아보자. Interpreter 짧게 얘기하면 Python 인터프리터는 코드를 한 줄씩 읽으면서 실행하는 프로그램이다. 이 방식때문에 인터프리터 언어가 느리단 얘기가 나오는 것이고, Java에서 이를 개선해서 등장한 방식이 JIT다. 이 인터프리터의 구현체는 여러가지가 있는데 대표적인 구현체가 C로 구현한 것이고, 이를 CPython이라고 한다. 이 글에서는 CPython 기준으로 설명할 것이다. Python 위키 항목을 읽어보면 Non-CPython implementations에 Jython, IronPython은 GIL이 없고, PyPy는 CPython과 비슷한 GIL을 가지고 있다. 또 Cython에는 CIL이 존재하지만…","fields":{"slug":"/GIL/"},"frontmatter":{"categories":"Python","title":"GIL 훔쳐보기","date":"February 08, 2022"}},"next":{"fields":{"slug":"/page-replacement-algorithm/"}},"previous":{"fields":{"slug":"/spring-core-chap1/"}}},{"node":{"id":"ebd8884b-23b5-5248-869a-2e0428b7f545","excerpt":"문제 상황 백준 빵집를 풀때 이상한 점이 확실히 생겼다.  일반적으로 python에서 방문 여부를 확인하기 위해 과 중에 하나를 사용한다.\n같은 경우는 잘못된 접근 같은 행동에서 안전한 편이고 대부분의 기능에서 의 시간이 보장된다고 알고 있기 때문에 을 이용한 풀이를 종종했다. List에서는 미숙한 코드로 indexError를 경험할 수 있다. 이 문제는 naive 하게 을 사용하면 시간초과를 당한다. 처음엔 논리를 잘못 구성해 recursionDepth가 커져서 시간초과가 나는건가 라고 생각했지만 논리에는 문제가 없었다. 그래서 만을 로 바꿔주었더니 통과했다. 분명 도 똑같이 이고 에서는 도 이라고 알고 있는데 왜 차이가 나는 것일까? 이 이해 안되는 상황을 지금부터 알아보자. 메모리 사용량 먼저 간단하게 두 자료구조의 메모리 사용량을 비교해보았다. 아래 코드는 10000개의 행 , 500개의 열을 가진 2차원 board에서 사용되는 방문을 기록하는 일반적인 구현이다. 하나는 로…","fields":{"slug":"/secret-of-set-in-python/"},"frontmatter":{"categories":"Python","title":"Python 3의 Set 훔쳐보기","date":"August 07, 2021"}},"next":{"fields":{"slug":"/programmers-build-race-road/"}},"previous":{"fields":{"slug":"/programmers-flip-card/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}